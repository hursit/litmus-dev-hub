apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: weg-base
  namespace: litmus
  labels:
    subject: weg-base
spec:
  entrypoint: argowf-chaos
  serviceAccountName: argo-chaos
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
      - name: appNamespace
        value: weg-base
  templates:
    - name: argowf-chaos
      steps:
        - - name: install-chaos-faults
            template: install-chaos-faults

        - - name: pod-delete
            template: pod-delete
          - name: k6-loadgen-pod-delete-1
            template: k6-loadgen-pod-delete-1
          - name: k6-loadgen-pod-delete-2
            template: k6-loadgen-pod-delete-2
          - name: k6-loadgen-pod-delete-3
            template: k6-loadgen-pod-delete-3
          - name: k6-loadgen-pod-delete-4
            template: k6-loadgen-pod-delete-4
          - name: k6-loadgen-pod-delete-5
            template: k6-loadgen-pod-delete-5
            
        - - name: pod-network-loss
            template: pod-network-loss
          - name: k6-loadgen-pod-network-loss-1
            template: k6-loadgen-pod-network-loss-1
          - name: k6-loadgen-pod-network-loss-2
            template: k6-loadgen-pod-network-loss-2
          - name: k6-loadgen-pod-network-loss-3
            template: k6-loadgen-pod-network-loss-3
          - name: k6-loadgen-pod-network-loss-4
            template: k6-loadgen-pod-network-loss-4
          - name: k6-loadgen-pod-network-loss-5
            template: k6-loadgen-pod-network-loss-5
        
        - - name: pod-network-latency
            template: pod-network-latency
          - name: k6-loadgen-pod-network-latency-1
            template: k6-loadgen-pod-network-latency-1
          - name: k6-loadgen-pod-network-latency-2
            template: k6-loadgen-pod-network-latency-2
          - name: k6-loadgen-pod-network-latency-3
            template: k6-loadgen-pod-network-latency-3
          - name: k6-loadgen-pod-network-latency-4
            template: k6-loadgen-pod-network-latency-4
          - name: k6-loadgen-pod-network-latency-5
            template: k6-loadgen-pod-network-latency-5
        - - name: cleanup-chaos-resources
            template: cleanup-chaos-resources
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: pod-delete
            path: /tmp/pod-delete.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Deletes a pod belonging to a deployment/statefulset/daemonset
                kind: ChaosExperiment

                metadata:
                  name: pod-delete
                  labels:
                    name: pod-delete
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: latest
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:latest
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-delete
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "15"
                      - name: RAMP_TIME
                        value: ""
                      - name: FORCE
                        value: "true"
                      - name: CHAOS_INTERVAL
                        value: "5"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-delete
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: latest
          - name: pod-network-loss
            path: /tmp/pod-network-loss.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects network packet loss on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-loss
                  labels:
                    name: pod-network-loss
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: latest
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      # Create and monitor the experiment & helper pods
                      - apiGroups: [""]
                        resources: ["pods"]
                        verbs:
                          [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "deletecollection",
                          ]
                      # Performs CRUD operations on the events inside chaosengine and chaosresult
                      - apiGroups: [""]
                        resources: ["events"]
                        verbs: ["create", "get", "list", "patch", "update"]
                      # Fetch configmaps details and mount it to the experiment pod (if specified)
                      - apiGroups: [""]
                        resources: ["configmaps"]
                        verbs: ["get", "list"]
                      # Track and get the runner, experiment, and helper pods log
                      - apiGroups: [""]
                        resources: ["pods/log"]
                        verbs: ["get", "list", "watch"]
                      # for creating and managing to execute commands inside target container
                      - apiGroups: [""]
                        resources: ["pods/exec"]
                        verbs: ["get", "list", "create"]
                      # deriving the parent/owner details of the pod(if parent is anyof {deployment, statefulset, daemonsets})
                      - apiGroups: ["apps"]
                        resources: ["deployments", "statefulsets", "replicasets", "daemonsets"]
                        verbs: ["list", "get"]
                      # deriving the parent/owner details of the pod(if parent is deploymentConfig)
                      - apiGroups: ["apps.openshift.io"]
                        resources: ["deploymentconfigs"]
                        verbs: ["list", "get"]
                      # deriving the parent/owner details of the pod(if parent is deploymentConfig)
                      - apiGroups: [""]
                        resources: ["replicationcontrollers"]
                        verbs: ["get", "list"]
                      # deriving the parent/owner details of the pod(if parent is argo-rollouts)
                      - apiGroups: ["argoproj.io"]
                        resources: ["rollouts"]
                        verbs: ["list", "get"]
                      # for configuring and monitor the experiment job by the chaos-runner pod
                      - apiGroups: ["batch"]
                        resources: ["jobs"]
                        verbs: ["create", "list", "get", "delete", "deletecollection"]
                      # for creation, status polling and deletion of litmus chaos resources used within a chaos workflow
                      - apiGroups: ["litmuschaos.io"]
                        resources: ["chaosengines", "chaosexperiments", "chaosresults"]
                        verbs: ["create", "list", "get", "patch", "update", "delete"]
                    image: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:latest"
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-loss
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""

                      # provide lib image
                      - name: LIB_IMAGE
                        value: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:latest"

                      - name: NETWORK_INTERFACE
                        value: "eth0"

                      - name: TC_IMAGE
                        value: "gaiadocker/iproute2"

                      - name: NETWORK_PACKET_LOSS_PERCENTAGE
                        value: "100" #in PERCENTAGE

                      - name: TOTAL_CHAOS_DURATION
                        value: "60" # in seconds

                      # time period to wait before and after injection of chaos in sec
                      - name: RAMP_TIME
                        value: ""

                      ## percentage of total pods to target
                      - name: PODS_AFFECTED_PERC
                        value: ""

                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"

                      - name: TARGET_PODS
                        value: ""

                      # To select pods on specific node(s)
                      - name: NODE_LABEL
                        value: ""

                      # provide the name of container runtime
                      # for litmus LIB, it supports docker, containerd, crio
                      # for pumba LIB, it supports docker only
                      - name: CONTAINER_RUNTIME
                        value: "containerd"

                      # provide the destination ips
                      # chaos injection will be triggered for these destination ips
                      - name: DESTINATION_IPS
                        value: ""

                      # provide the destination hosts
                      # chaos injection will be triggered for these destination hosts
                      - name: DESTINATION_HOSTS
                        value: ""

                      # provide the socket file path
                      - name: SOCKET_PATH
                        value: "/run/containerd/containerd.sock"

                      ## it defines the sequence of chaos execution for multiple target pods
                      ## supported values: serial, parallel
                      - name: SEQUENCE
                        value: "parallel"

                    labels:
                      name: pod-network-loss
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: latest
          - name: pod-network-latency
            path: /tmp/pod-network-latency.yaml
            raw:
              data: >+
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Fillup Ephemeral Storage of a Resource
                kind: ChaosExperiment

                metadata:
                  name: pod-network-latency
                  labels:
                    name: pod-network-latency
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: latest
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      # Create and monitor the experiment & helper pods
                      - apiGroups: [""]
                        resources: ["pods"]
                        verbs:
                          [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "deletecollection",
                          ]
                      # Performs CRUD operations on the events inside chaosengine and chaosresult
                      - apiGroups: [""]
                        resources: ["events"]
                        verbs: ["create", "get", "list", "patch", "update"]
                      # Fetch configmaps details and mount it to the experiment pod (if specified)
                      - apiGroups: [""]
                        resources: ["configmaps"]
                        verbs: ["get", "list"]
                      # Track and get the runner, experiment, and helper pods log
                      - apiGroups: [""]
                        resources: ["pods/log"]
                        verbs: ["get", "list", "watch"]
                      # for creating and managing to execute commands inside target container
                      - apiGroups: [""]
                        resources: ["pods/exec"]
                        verbs: ["get", "list", "create"]
                      # deriving the parent/owner details of the pod(if parent is anyof {deployment, statefulset, daemonsets})
                      - apiGroups: ["apps"]
                        resources: ["deployments", "statefulsets", "replicasets", "daemonsets"]
                        verbs: ["list", "get"]
                      # deriving the parent/owner details of the pod(if parent is deploymentConfig)
                      - apiGroups: ["apps.openshift.io"]
                        resources: ["deploymentconfigs"]
                        verbs: ["list", "get"]
                      # deriving the parent/owner details of the pod(if parent is deploymentConfig)
                      - apiGroups: [""]
                        resources: ["replicationcontrollers"]
                        verbs: ["get", "list"]
                      # deriving the parent/owner details of the pod(if parent is argo-rollouts)
                      - apiGroups: ["argoproj.io"]
                        resources: ["rollouts"]
                        verbs: ["list", "get"]
                      # for configuring and monitor the experiment job by the chaos-runner pod
                      - apiGroups: ["batch"]
                        resources: ["jobs"]
                        verbs: ["create", "list", "get", "delete", "deletecollection"]
                      # for creation, status polling and deletion of litmus chaos resources used within a chaos workflow
                      - apiGroups: ["litmuschaos.io"]
                        resources: ["chaosengines", "chaosexperiments", "chaosresults"]
                        verbs: ["create", "list", "get", "patch", "update", "delete"]
                    image: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:latest"
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-latency
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""

                      - name: FILL_PERCENTAGE
                        value: "80"

                      - name: TOTAL_CHAOS_DURATION
                        value: "60"

                      # Period to wait before and after injection of chaos in sec
                      - name: RAMP_TIME
                        value: ""

                      # provide the data block size
                      # supported unit is KB
                      - name: DATA_BLOCK_SIZE
                        value: "256"

                      - name: TARGET_PODS
                        value: ""

                      - name: EPHEMERAL_STORAGE_MEBIBYTES
                        value: ""

                      # To select pods on specific node(s)
                      - name: NODE_LABEL
                        value: ""

                      ## percentage of total pods to target
                      - name: PODS_AFFECTED_PERC
                        value: ""

                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"

                      - name: LIB_IMAGE
                        value: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:latest"

                      # Provide the container runtime path
                      # Default set to docker container path
                      - name: CONTAINER_PATH
                        value: "/var/lib/docker/containers"

                      ## it defines the sequence of chaos execution for multiple target pods
                      ## supported values: serial, parallel
                      - name: SEQUENCE
                        value: "parallel"

                    labels:
                      name: pod-network-latency
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/host-path-usage: "true"
                      app.kubernetes.io/version: latest


          - name: k6-loadgen-acy
            path: /tmp/k6-loadgen-acy.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Execute the k6 engine using the JS script
                kind: ChaosExperiment

                metadata:
                  name: k6-loadgen
                  labels:
                    name: k6-loadgen
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.10.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - secrets
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.10.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name k6-loadgen
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "30"
                      - name: CHAOS_INTERVAL
                        value: "30"
                      - name: RAMP_TIME
                        value: "0"
                      - name: SCRIPT_SECRET_NAME
                        value: k6-script
                      - name: SCRIPT_SECRET_KEY
                        value: script.js
                      - name: LIB_IMAGE
                        value: ghcr.io/grafana/k6-operator:latest-runner
                      - name: LIB_IMAGE_PULL_POLICY
                        value: Always
                    labels:
                      name: k6-loadgen
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.10.0
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}}
            && sleep 30
        resources: {}
 
    - name: pod-delete
      inputs:
        artifacts:
          - name: pod-delete
            path: /tmp/chaosengine-pod-delete.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: catalogue-pod-delete-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    context: "{{workflow.parameters.appNamespace}}_catalogue"
                  annotations: {}
                spec:
                  appinfo:
                    appns: sock-shop
                    applabel: name=catalogue
                    appkind: deployment
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  jobCleanUpPolicy: retain
                  components:
                    runner:
                      imagePullPolicy: IfNotPresent
                  experiments:
                    - name: pod-delete
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: '60'
                
                            - name: RAMP_TIME
                              value: '0'
                
                            - name: CHAOS_INTERVAL
                              value: '1'
                
                            - name: FORCE
                              value: 'true'
                
                            - name: PODS_AFFECTED_PERC
                              value: '100'
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-delete.yaml
          - -saveName=/tmp/engine-name
    - name: pod-network-loss
      inputs:
        artifacts:
          - name: pod-network-loss
            path: /tmp/chaosengine-pod-network-loss.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: pod-network-loss-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    context: "{{workflow.parameters.appNamespace}}_user-db"
                  annotations: {}
                spec:
                  appinfo:
                    appns: sock-shop
                    applabel: name=catalogue
                    appkind: deployment
                  jobCleanUpPolicy: retain
                  engineState: active
                  auxiliaryAppInfo: ""
                  chaosServiceAccount: litmus-admin
                  components:
                    runner:
                      imagePullPolicy: Always
                  experiments:
                    - name: pod-network-loss
                      spec:
                        components:
                          env:
                            - name: NETWORK_PACKET_LOSS_PERCENTAGE
                              value: "100"
              
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
              
                            - name: RAMP_TIME
                              value: "10"
              
                            - name: PODS_AFFECTED_PERC
                              value: "100"
              
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
              
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-loss.yaml
          - -saveName=/tmp/engine-name
    - name: pod-network-latency
      inputs:
        artifacts:
          - name: pod-network-latency
            path: /tmp/chaosengine-pod-network-latency.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: catalogue-pod-network-latency
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    context: "{{workflow.parameters.appNamespace}}_catalogue-db"
                  annotations: {}
                spec:
                  appinfo:
                    appns: sock-shop
                    applabel: name=catalogue
                    appkind: deployment
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  jobCleanUpPolicy: retain
                  components:
                    runner:
                      imagePullPolicy: Always
                  experiments:
                    - name: pod-network-latency
                      spec:
                        components:
                          env:
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.10.0
                            - name: LATENCY
                              value: "2000"
                            - name: TARGET_SERVICE_PORT
                              value: "80"
                            - name: TOXICITY
                              value: "100"
                            - name: PROXY_PORT
                              value: "20000"
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: "100"
                            - name: TARGET_LABELS
                              value: "name=catalogue"
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-latency.yaml
          - -saveName=/tmp/engine-name
    - name: cleanup-chaos-resources
      container:
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - kubectl delete chaosengine pod-memory-hog-chaos  pod-cpu-hog-chaos
            catalogue-deployment-delete-chaos pod-network-loss-chaos -n
            {{workflow.parameters.adminModeNamespace}}
    - name: k6-loadgen-pod-delete-1
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-catalogue-config
                            - name: SCRIPT_SECRET_KEY
                              value: catalogue.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-delete-2
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-front-end-config
                            - name: SCRIPT_SECRET_KEY
                              value: front-end.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-delete-3
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-delete-4
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-delete-5
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-loss-1
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-catalogue-config
                            - name: SCRIPT_SECRET_KEY
                              value: catalogue.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-loss-2
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-front-end-config
                            - name: SCRIPT_SECRET_KEY
                              value: front-end.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-loss-3
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                #cpu hog start
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-loss-4
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                #cpu hog start
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-loss-5
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                #cpu hog start
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-latency-1
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-catalogue-config
                            - name: SCRIPT_SECRET_KEY
                              value: catalogue.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-latency-2
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "180"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-front-end-config
                            - name: SCRIPT_SECRET_KEY
                              value: front-end.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
    - name: k6-loadgen-pod-network-latency-3
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name

    - name: k6-loadgen-pod-network-latency-4
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name

    - name: k6-loadgen-pod-network-latency-5
      inputs:
        artifacts:
          - name: k6-loadgen-acy
            path: /tmp/chaosengine-k6-loadgen-acy.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations: {}
                spec:
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: k6-loadgen
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "180"
                            - name: CHAOS_INTERVAL
                              value: "30"
                            - name: RAMP_TIME
                              value: "0"
                            - name: SCRIPT_SECRET_NAME
                              value: k6-payment-config
                            - name: SCRIPT_SECRET_KEY
                              value: payment.js
                            - name: LIB_IMAGE
                              value: ghcr.io/grafana/k6-operator:latest-runner
                            - name: LIB_IMAGE_PULL_POLICY
                              value: Always
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-k6-loadgen-acy.yaml
          - -saveName=/tmp/engine-name
